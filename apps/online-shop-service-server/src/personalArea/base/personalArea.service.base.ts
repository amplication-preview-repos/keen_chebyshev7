/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PersonalArea as PrismaPersonalArea } from "@prisma/client";

export class PersonalAreaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PersonalAreaCountArgs, "select">
  ): Promise<number> {
    return this.prisma.personalArea.count(args);
  }

  async personalAreas(
    args: Prisma.PersonalAreaFindManyArgs
  ): Promise<PrismaPersonalArea[]> {
    return this.prisma.personalArea.findMany(args);
  }
  async personalArea(
    args: Prisma.PersonalAreaFindUniqueArgs
  ): Promise<PrismaPersonalArea | null> {
    return this.prisma.personalArea.findUnique(args);
  }
  async createPersonalArea(
    args: Prisma.PersonalAreaCreateArgs
  ): Promise<PrismaPersonalArea> {
    return this.prisma.personalArea.create(args);
  }
  async updatePersonalArea(
    args: Prisma.PersonalAreaUpdateArgs
  ): Promise<PrismaPersonalArea> {
    return this.prisma.personalArea.update(args);
  }
  async deletePersonalArea(
    args: Prisma.PersonalAreaDeleteArgs
  ): Promise<PrismaPersonalArea> {
    return this.prisma.personalArea.delete(args);
  }
}
